#!/usr/bin/perl -w

print "1..10\n";
my $current_test = 1;
my $exit_status = 0;
assert_produces_correct_output('in.tex', 'correct.txt');
assert_produces_correct_output('in.tex', 'correct.txt', '-l');
assert_produces_correct_output('noinclude.tex', 'noinclude-correct.txt', '-n');
assert_produces_correct_output('words.tex', 'words-correct.txt', '-w');
assert_produces_correct_output('words.tex', 'words-correct.txt', '-w -l');
assert_produces_correct_output('nouns.tex', 'nouns-correct.txt', '-r');

run_for_wrong_input("non-existent-file");
run_for_wrong_input("non-existent-file.tex");
run_for_wrong_input("non-existent-file.txt");
run_for_wrong_input("test/unterminated.txt");

exit $exit_status;

sub assert_produces_correct_output {
	my ($input, $correct, $options) = @_;
	$options ||= '';
	my $options_desc = $options ? " ($options)" : '';
	execute_cmd("./detex $options @top_srcdir@/test/$input > /tmp/testDelatex.txt");
	print "Correct output is produced for $input->$correct$options_desc\n";

	my $compared = "@top_srcdir@/test/$correct /tmp/testDelatex.txt";
	my $diffResult = `diff $compared 2>&1`;

	if ($diffResult ne '') {
		if (`which kdiff3 2>/dev/null`) {
			system("kdiff3 $compared");
		} elsif (!$ENV{CI} && `which vimdiff 2>/dev/null`) {
			system("vimdiff $compared");
		} else {
			system("diff -u $compared");
		}
	}
}

sub run_for_wrong_input {
	my ($input) = @_;
	execute_cmd("./detex @top_srcdir@/$input");
	print "Response for $input...\n";
}

sub execute_cmd {
	my ($cmd) = @_;
	if (system(get_cmd($cmd)) == 0) {
	    print "ok ${current_test} - ";
	} else {
	    print "not ok ${current test} - ";
	    $exit_status = 11;
	}
	$current_test = $current_test + 1
}

sub get_cmd {
	my ($cmd) = @_;
	if ($ARGV[0] && $ARGV[0] eq '--valgrind') {
		$cmd = "valgrind --leak-check=yes --leak-check=full --error-exitcode=1 $cmd";
	}
	return $cmd;
}
